{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8UA+BeA,MA1Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OAAS,yBAAKC,UAAU,SACpB,yBAAKC,IAAKH,EAAQI,IAAKN,IACvB,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAG/C,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UCyCGC,G,mNAnDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAQAC,IAAMC,IAAI,qDARV,gBAKJJ,EALI,EAGRK,KACEA,KACEL,OAIN,EAAKM,SAAS,CACZN,SACAD,WAAW,IAXH,2C,kEAiBVQ,KAAKN,c,+BAEG,IAAD,EAIHM,KAAKT,MAFPC,EAFK,EAELA,UACAC,EAHK,EAGLA,OAEF,OACA,6BAASX,UAAU,aAChBU,EAAa,yBAAKV,UAAU,UAC3B,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAOa,EAAMC,GACbA,GAAMD,EAAMC,GACZzB,KAAQwB,EAAMxB,KACdC,MAASuB,EAAMvB,MACfC,QAAWsB,EAAMtB,QACjBC,OAAUqB,EAAME,mBAChBtB,OAAUoB,EAAMpB,aAd1B,S,GA/BcuB,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9f4f70c6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\nimport { getRoles } from \"@testing-library/react\";\n\nfunction Movie({year, title, summary, poster, genres}) {\n    return ( <div className=\"movie\">\n        <img src={poster} alt={title} />\n        <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"movie__genres\">\n                {genres.map((genre, index) => (\n                <li key={index} className=\"genres__genre\">{genre}</li>\n                ))}\n            </ul>\n            <p className=\"movie__summary\">{summary.slice(0, 200)}...</p>\n        </div>\n    </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movies\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  // async 이 함수가 비동기라고 말해줌. (끝날때 까지 기다려야 한다는 걸 서술해 주는 것.)\n  getMovies = async () => {\n    // await 를 이용해서 기다리길 원하는걸 지정해 줌.\n    const {\n      data: {\n        data: {\n          movies\n        }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by\");\n    this.setState({\n      movies,\n      isLoading: false\n    });\n  }\n  componentDidMount() {\n    // axio는 느릴 수 있어서, js에게 componentDidMount가 끝날 때 까지 기다려야 한다는 신호를 줘야함.\n    // async, getMives 와 같은 함수를 만들어서 비동기적으로 처리\n    this.getMovies();\n  }\n  render() {\n    const {\n      isLoading,\n      movies,\n    } = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading ? (<div className=\"loader\">\n        <span className=\"loader__text\">Loading...</span>\n      </div>\n      ): (\n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie\n              key = {movie.id}\n              id = {movie.id}\n              year = {movie.year}\n              title = {movie.title}\n              summary = {movie.summary}\n              poster = {movie.medium_cover_image}\n              genres = {movie.genres}\n            />))}\n        </div> \n      )} </section>);\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}